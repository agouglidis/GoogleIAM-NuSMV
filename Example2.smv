-- (c) 2019 - 2022 Antonios Gouglidis (a.gouglidis@lancaster.ac.uk, agouglidis@gmail.com), Anna Kagia (a_kagia@yahoo.com)

MODULE main

VAR
	MEMBER : {ANY, "alice@example.com", "data_uploaders@example.com", "jane@example.com", "harry@example.com", "bob@example.com"};
	ROLE : {ANY, "roles/storage.objectAdmin", "roles/storage.objectCreator"};
	PERMISSION : {ANY, "storage.objects.create", "storage.objects.delete", "storage.objects.update", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "resourcemanager.projects.get", "resourcemanager.projects.list"};
	RESOURCE:  {ANY, "example.com", "project_a", "upload_here"};
	
	RBACGCP : RBACGCP (MEMBER, ROLE, PERMISSION, RESOURCE);
	
ASSIGN
	next (MEMBER) := MEMBER;
	next (ROLE) := ROLE;
	next (PERMISSION) := PERMISSION;
	next (RESOURCE) := RESOURCE;
	

MODULE RBACGCP (MEMBER, ROLE, PERMISSION, RESOURCE )
VAR
	decision : {Grant, Deny};
	
ASSIGN
	init (decision) := Deny;
	next (decision) := case

	-- Definition of policies

	----- "alice@example.com" -----
	-- pl_1 UNION pl'_1
	(MEMBER = "alice@example.com" | MEMBER = ANY) & ( ROLE = "roles/storage.objectAdmin" | ROLE = ANY) & (PERMISSION = "storage.objects.create" | PERMISSION = "storage.objects.delete" | PERMISSION = "storage.objects.update" | PERMISSION = "storage.objects.get" |  PERMISSION = "storage.objects.getIamPolicy" | PERMISSION = "storage.objects.list" | PERMISSION = "storage.objects.setIamPolicy" | PERMISSION = "resourcemanager.projects.get" | PERMISSION = "resourcemanager.projects.list" | PERMISSION = ANY) & (RESOURCE = "project_a" | RESOURCE = "upload_here" | RESOURCE = ANY) : Grant;

	-- pl_2 UNION pl'_2
	----- "data_uploaders@example.com" -----
	(MEMBER = "data_uploaders@example.com"  | MEMBER = "jane@example.com" | MEMBER = "harry@example.com" | MEMBER = "bob@example.com" | MEMBER = ANY) & (ROLE = "roles/storage.objectCreator" | ROLE = ANY) & (PERMISSION = "storage.objects.create" | PERMISSION = "resourcemanager.projects.get" | PERMISSION = "resourcemanager.projects.list" | PERMISSION = ANY) & (RESOURCE = "project_a" | RESOURCE = "upload_here" | RESOURCE = ANY) : Grant;
	
	-- Default decision
	TRUE : Deny;
esac;


-- Specifications

-- Specification 1. Evaluates to FALSE.
SPEC AG ((MEMBER = "data_uploaders@example.com") &  (ROLE = ANY) & (PERMISSION = "storage.objects.delete") & (RESOURCE = ANY) -> AF decision = Grant) 

-- Specification 2. Evaluates to FALSE.
SPEC AG ((MEMBER = "alice@example.com") & (ROLE = ANY) & (PERMISSION = ANY) & (RESOURCE = "example.com") -> AF decision = Grant)   

-- Specification 3. Evaluates to FALSE.
SPEC AG ((MEMBER = ANY) & (ROLE = ANY) & (PERMISSION = "storage.objects.delete" | PERMISSION = "storage.objects.update" ) & (RESOURCE = "example.com") -> AF decision = Grant) 

-- Specification 4. Evaluates to FALSE.
SPEC AG ((MEMBER != "alice@example.com") & (ROLE = ANY) & (PERMISSION = "storage.objects.create") & (RESOURCE = ANY) -> AF decision = Deny)



-- **************************************************************************************
-- List of additional specifications (Not included in the paper).
-- **************************************************************************************

--SPEC AG ((MEMBER = "alice@example.com") & (ROLE = "roles/storage.objectAdmin") & (PERMISSION = ANY) & (RESOURCE = "upload_here") -> AF decision = Grant) 

--SPEC AG ((MEMBER = "data_uploaders@example.com") & (ROLE = "roles/storage.objectCreator") & (PERMISSION = ANY) & (RESOURCE = "project_a") -> AF decision = Grant)

--SPEC AG ((MEMBER = "jane@example.com") & (ROLE = "roles/storage.objectCreator") & (PERMISSION = ANY) & (RESOURCE = "project_a") -> AF decision = Grant)

--SPEC AG ((MEMBER = "bob@example.com") & (ROLE = ANY) & (PERMISSION = "storage.objects.create") & (RESOURCE = "upload_here") -> AF decision = Grant)

--SPEC AG ((MEMBER = "data_uploaders@example.com") & (ROLE = ANY) & (PERMISSION = "storage.objects.delete") & (RESOURCE = "upload_here") -> AF decision = Deny) 

--SPEC AG ((MEMBER = "harry@example.com") & (ROLE = "roles/storage.objectCreator") & (PERMISSION = ANY) & (RESOURCE = ANY) -> AF decision = Grant)

--SPEC AG ((MEMBER = "data_uploaders@example.com") & (ROLE = ANY) & (PERMISSION = "storage.objects.delete") & (RESOURCE = ANY) -> AF decision = Grant) 

--SPEC AG ((MEMBER = "alice@example.com") & (ROLE = ANY) & (PERMISSION = ANY) & (RESOURCE = "example.com") -> AF decision = Grant)

--SPEC AG ((MEMBER = ANY) & (ROLE = ANY) & (PERMISSION = ANY) & (RESOURCE = "example.com") -> AF decision = Deny)

--SPEC AG ((MEMBER = ANY) & (ROLE = ANY) & (PERMISSION = "storage.objects.update" ) & (RESOURCE = "example.com") -> AF decision = Grant)  

--SPEC AG ((MEMBER != "alice@example.com") & (ROLE = ANY) & (PERMISSION = "storage.objects.create") & (RESOURCE = ANY) -> AF decision = Deny) 

--SPEC AG ((MEMBER = "alice@example.com" | MEMBER = "data_uploaders@example.com") & (ROLE = ANY) & (PERMISSION = ANY) & (RESOURCE = ANY) -> AF decision = Deny) 